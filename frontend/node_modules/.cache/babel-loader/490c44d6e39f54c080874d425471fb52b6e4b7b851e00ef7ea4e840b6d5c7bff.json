{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\drug-interaction-system\\\\frontend\\\\src\\\\components\\\\DrugInteractionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, FormControl, InputLabel, MenuItem, Select, TextField, Typography, Container, Grid, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DrugInteractionForm() {\n  _s();\n  const [drugs, setDrugs] = useState([]);\n  const [selectedDrugs, setSelectedDrugs] = useState([]);\n  const [interactions, setInteractions] = useState([]);\n  const [interactionResults, setInteractionResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    fetch('http://localhost:3001/api/drugs').then(res => res.json()).then(data => setDrugs(data)).catch(err => console.error('Error fetching drugs:', err));\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    setLoading(true);\n    const drugIds = selectedDrugs.map(drug => drug.drug_id);\n    fetch('http://localhost:3001/api/check-interactions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        drugIds\n      })\n    }).then(res => res.json()).then(data => {\n      setInteractionResults(data);\n      setLoading(false);\n    }).catch(err => {\n      console.error('Error checking interactions:', err);\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 3,\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Drug Interaction Checker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Select Drug\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: \"\",\n                onChange: e => {\n                  const selectedDrug = drugs.find(drug => drug.drug_id === e.target.value);\n                  setSelectedDrugs([...selectedDrugs, selectedDrug]);\n                },\n                children: drugs.map(drug => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: drug.drug_id,\n                  children: drug.drug_name\n                }, drug.drug_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Selected Drugs:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), selectedDrugs.map((drug, index) => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: drug.drug_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              type: \"submit\",\n              disabled: selectedDrugs.length < 2,\n              children: \"Check Interactions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Interaction Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Checking interactions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this) : interactionResults.map((result, index) => /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2,\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          children: result.severity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: result.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(DrugInteractionForm, \"rRvvo7X0ViYnWdiHYAZpraXn2/c=\");\n_c = DrugInteractionForm;\nexport default DrugInteractionForm;\nvar _c;\n$RefreshReg$(_c, \"DrugInteractionForm\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","FormControl","InputLabel","MenuItem","Select","TextField","Typography","Container","Grid","Paper","jsxDEV","_jsxDEV","DrugInteractionForm","_s","drugs","setDrugs","selectedDrugs","setSelectedDrugs","interactions","setInteractions","interactionResults","setInteractionResults","loading","setLoading","fetch","then","res","json","data","catch","err","console","error","handleSubmit","event","preventDefault","drugIds","map","drug","drug_id","method","headers","body","JSON","stringify","maxWidth","children","elevation","sx","p","mt","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","container","spacing","item","xs","md","fullWidth","value","onChange","e","selectedDrug","find","target","drug_name","index","color","type","disabled","length","result","severity","description","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/drug-interaction-system/frontend/src/components/DrugInteractionForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n  Container,\r\n  Grid,\r\n  Paper\r\n} from '@mui/material';\r\n\r\nfunction DrugInteractionForm() {\r\n  const [drugs, setDrugs] = useState([]);\r\n  const [selectedDrugs, setSelectedDrugs] = useState([]);\r\n  const [interactions, setInteractions] = useState([]);\r\n  const [interactionResults, setInteractionResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3001/api/drugs')\r\n      .then(res => res.json())\r\n      .then(data => setDrugs(data))\r\n      .catch(err => console.error('Error fetching drugs:', err));\r\n  }, []);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    \r\n    const drugIds = selectedDrugs.map(drug => drug.drug_id);\r\n    \r\n    fetch('http://localhost:3001/api/check-interactions', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ drugIds }),\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setInteractionResults(data);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        console.error('Error checking interactions:', err);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Paper elevation={3} sx={{ p: 3, mt: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Drug Interaction Checker\r\n        </Typography>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Select Drug</InputLabel>\r\n                <Select\r\n                  value=\"\"\r\n                  onChange={(e) => {\r\n                    const selectedDrug = drugs.find(drug => drug.drug_id === e.target.value);\r\n                    setSelectedDrugs([...selectedDrugs, selectedDrug]);\r\n                  }}\r\n                >\r\n                  {drugs.map((drug) => (\r\n                    <MenuItem key={drug.drug_id} value={drug.drug_id}>\r\n                      {drug.drug_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h6\">Selected Drugs:</Typography>\r\n              {selectedDrugs.map((drug, index) => (\r\n                <Box key={index} sx={{ mt: 1 }}>\r\n                  <Typography>{drug.drug_name}</Typography>\r\n                </Box>\r\n              ))}\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                type=\"submit\"\r\n                disabled={selectedDrugs.length < 2}\r\n              >\r\n                Check Interactions\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n\r\n      <Box sx={{ mt: 4 }}>\r\n        <Typography variant=\"h5\">Interaction Results</Typography>\r\n        {loading ? (\r\n          <Typography>Checking interactions...</Typography>\r\n        ) : (\r\n          interactionResults.map((result, index) => (\r\n            <Paper key={index} sx={{ p: 2, mt: 2 }}>\r\n              <Typography color=\"error\">{result.severity}</Typography>\r\n              <Typography>{result.description}</Typography>\r\n            </Paper>\r\n          ))\r\n        )}\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default DrugInteractionForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}